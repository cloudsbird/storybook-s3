name: 'Deploy Storybook to AWS S3'
description: 'Build and deploy storybook code to AWS S3'

inputs:
  aws_access_key_id:
    description: 'AWS Access Key ID'
    required: true
  aws_secret_access_key:
    description: 'AWS Secret Access Key'
    required: true
  aws_region:
    description: 'AWS Region'
    required: true
  aws_s3_bucket:
    description: 'AWS S3 Bucket'
    required: true
  aws_s3_host:
    description: 'AWS S3 Host'
    required: false
    default: 's3.amazonaws.com'
  aws_s3_endpoint:
    description: 'AWS S3 Endpoint URL'
    required: true
  preview: 
    description: 'Preview'
    required: false
    default: 'false'
  install_command:
    description: 'Command to install dependencies'
    required: false
    default: 'npm install'
  build_command:
    description: 'Comand to build storybook'
    required: false
    default: 'npm run build-storybook'
  checkout:
    description: 'Command to checkout'
    required: false
    default: 'true'

runs:
  using: 'composite'

  steps:
    - name: Checkout
      if: inputs.checkout == 'true'
      uses: actions/checkout@v4

    - name: 'Build'
      shell: bash
      run: |
        ${{ inputs.install_command }}
        ${{ inputs.build_command }}
    
    - uses: haya14busa/action-cond@v1
      id: preview
      with: 
        cond: ${{ inputs.preview == 'true' }}
        if_true: "pr-${{ github.event.pull_request.number }}"
        if_false: "main"

    - name: 'Deploy to S3'
      uses: jakejarvis/s3-sync-action@master
      with: 
        args: --acl public-read --follow-symlinks --delete
      env:
        AWS_S3_BUCKET: ${{ inputs.aws_s3_bucket }}
        AWS_ACCESS_KEY_ID: ${{ inputs.aws_access_key_id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws_secret_access_key }}
        AWS_REGION: ${{ inputs.aws_region }}
        SOURCE_DIR: 'storybook-static'
        AWS_S3_ENDPOINT: ${{ inputs.aws_s3_host }}
        DEST_DIR: ${{ steps.preview.outputs.value }}

    - name: 'Comment on PR'
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request' && inputs.preview == 'true'
      with:
        script: |
          const issue_number = context.issue.number;
          const repository = context.repo.repo;
          const owner = context.repo.owner;
          const message = `Story Book Deployment has been done! URL: https://${{inputs.aws_s3_endpoint}}/${{ steps.preview.outputs.value }}/index.html`;
          github.rest.issues.createComment({
            issue_number: issue_number,
            owner: owner,
            repo: repository,
            body: message
          });
